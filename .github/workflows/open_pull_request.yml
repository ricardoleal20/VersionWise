name: 🤖 Automated Bump PR 🔖

on:
  push:
    branches:
      - main
  # -------------------------------------------------------------------------- #
  # To use this Workflow, you need to specify this line on your job:           #
  # uses: ricardoleal20/versionwise/.github/workflows/open_pull_request.yml@main  #
  # -------------------------------------------------------------------------- #
  workflow_call:

# Generate the jobs for this
jobs:
  # Name of the main job for this
  bump_and_open_pr:
    runs-on: ubuntu-latest

    steps:
    # Check the code to see the differences
    - name: Checkout code 🧑‍💻
      uses: actions/checkout@v3

    - name: Set Git user globally to github-actions ⑆
      uses: gotmax23/set-bot-git-user-action@main
      with:
        global: true
        bot: github-actions
        name: "Github Actions"

    - name: Set up Python 🐍
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Load cached Poetry installation 📦
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Load cached dependencies 📦
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies 🏗️
      run: |
        pip install -Iv poetry==1.8.1
        poetry config virtualenvs.in-project true
        poetry install
        poetry run pip install PyGithub
        poetry run pip install maturin
        poetry run maturin develop

    - name: Perform version bump 🔖
      run: |
        poetry run versionwise bump

    - name: Create and switch to bump branch 🔍
      run: |
        # Fetch all branches and tags
        git fetch origin
        
        if git show-ref --verify --quiet refs/remotes/origin/bump-new-version; then
          # If branch exists, checkout and rebase
          git checkout bump-new-version
          git pull --rebase origin bump-new-version
        else
          # If branch doesn't exist, create it
          git checkout -b bump-new-version
        fi
        
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add CHANGELOG.md
        git add pyproject.toml
        git add Cargo.toml
        git commit -m "🔖 Bump: Update version and CHANGELOG"
        # Try push with --force-with-lease for safety
        git push --force-with-lease origin bump-new-version

    - name: Run Python script for open the PR 🖥️
      run: poetry run python .github/utilities/open_pr.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH_NAME: ${{ github.ref }}
        REPO_NAME: ${{ github.repository }}

    # If the linter pass
    - run: echo "Version bumped and PR created! ✅"
